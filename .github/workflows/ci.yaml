name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:

    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Conda Environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.cfg.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml

        channels: dglteam,conda-forge,defaults

        activate-environment: test
        auto-update-conda: true
        auto-activate-base: false
        show-channel-urls: true

    - name: Install the OpenFF Toolkit (pre 0.9.1 release)
      shell: bash -l {0}
      run: |
        conda install --yes --only-deps -c conda-forge openff-toolkit-base
        conda install --yes -c conda-forge rdkit ambertools

        git clone https://github.com/openforcefield/openff-toolkit.git

        cd openff-toolkit
        python setup.py develop
        cd ..

    - name: Install Package
      shell: bash -l {0}
      run: |
        python setup.py develop --no-deps

    - name: Conda Environment Information
      shell: bash -l {0}
      run: |
        conda info
        conda list

    - name: Run Tests
      shell: bash -l {0}
      run: |
        pytest -v --cov=nagl --cov-report=xml --color=yes nagl/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
